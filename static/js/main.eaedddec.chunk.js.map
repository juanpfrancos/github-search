{"version":3,"sources":["components/SearchBar.js","components/CardUser.js","components/Fetch.js","App.js","reportWebVitals.js","index.js"],"names":["Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginBottom","width","breakpoints","up","StyledInputBase","InputBase","color","padding","spacing","paddingLeft","transition","transitions","create","SearchAppBar","username","setUsername","onChange","e","target","value","placeholder","inputProps","event","onKeyUp","onPaste","ExpandMore","props","expand","other","IconButton","transform","marginLeft","duration","shortest","CardUserMe","userData","React","expanded","setExpanded","handleExpandClick","Card","sx","maxWidth","CardHeader","title","login","onClick","CardMedia","component","image","avatar_url","alt","CardActions","disableSpacing","Collapse","in","timeout","unmountOnExit","CardContent","Typography","paragraph","public_repos","public_gists","created_at","html_url","updated_at","Main","useState","Object","setUserData","useEffect","getUserData","gitHubUrl","a","fetch","response","json","data","message","console","log","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eaedddec.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport InputBase from '@mui/material/InputBase';\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginBottom: '1em',\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchAppBar({username, setUsername}) {\r\n\r\nconst onChange = (e) =>{\r\n    setUsername(e.target.value)\r\n}\r\n  return (\r\n          <Search>\r\n            <StyledInputBase\r\n              placeholder=\"Search…\"\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={(event) => {onChange(event)}}\r\n              onKeyUp={(event) => {onChange(event)}}\r\n              onPaste={(event) => {onChange(event)}}\r\n            />\r\n          </Search>\r\n  );\r\n}","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nconst ExpandMore = styled((props) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: theme.transitions.create('transform', {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport default function CardUserMe({ userData }) {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 345 }}>\r\n      <CardHeader\r\n        title={userData.login}\r\n        onClick={handleExpandClick}\r\n      />\r\n      <CardMedia\r\n        component=\"img\"\r\n        image={userData.avatar_url}\r\n        alt=\"Avatar User\"\r\n        onClick={handleExpandClick}\r\n      />\r\n      <CardActions disableSpacing>\r\n        <ExpandMore\r\n          expand={expanded}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </ExpandMore>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n        <Typography paragraph>\r\n         Total Repositorios: {userData.public_repos}\r\n        </Typography>\r\n          <Typography paragraph>\r\n            Gist Públicos: {userData.public_gists}\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Fecha de registro: {userData.created_at}\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Dirección: {userData.html_url}\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Último Commit: {userData.updated_at}\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport SearchAppBar from \"./SearchBar\"\r\nimport CardUserMe from './CardUser'\r\n\r\nfunction Main() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [userData, setUserData] = useState(Object);\r\n      \r\n    useEffect(() => {\r\n        getUserData();\r\n    }, [username]);\r\n  \r\n    var gitHubUrl = `https://api.github.com/users/${username}`;\r\n  \r\n    const getUserData = async () => {\r\n        const response = await fetch(gitHubUrl);\r\n        const data = await response.json();\r\n        if (data && data.message !== \"Not Found\") {\r\n            setUserData(data);\r\n            console.log(data)\r\n        }\r\n        else if (username !== \"\") {\r\n            console.log('El usuario no existe');\r\n        }\r\n        else {\r\n            setUserData({})\r\n        }\r\n    };\r\n      \r\n    return (\r\n        <>\r\n            <SearchAppBar username={username} setUsername={setUsername}></SearchAppBar>\r\n            <CardUserMe  userData={userData} ></CardUserMe>\r\n        </>\r\n    );\r\n}\r\n  \r\nexport default Main;","import './App.css';\nimport Main from './components/Fetch'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main></Main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}